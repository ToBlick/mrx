name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy jax[cuda12] jaxlib numpy pytest
        
    - name: Run ruff
      run: |
        ruff check .
        
    - name: Run mypy
      run: |
        mypy scripts/ --ignore-missing-imports
        
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jax[cuda12] jaxlib numpy pytest pytest-cov
        
    - name: Run tests
      run: |
        pytest mrx/test/ --cov=mrx --cov-report=xml
        
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        
  script-test:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
        script: [
          'polar_helicity.py',
          'cube_relaxation.py',
          'relaxation.py',
          'two_d_helicity.py',
          'polar_relaxation.py',
          'conjugate.py',
          'oop_splines.py',
          'two_d_poisson.py',
          'polar_poisson.py',
          'three_d_poisson.py',
          'two_d_poisson_mixed.py',
          'Beltrami.py',
          'two_d_helmhotz_decomposition.py'
        ]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jax[cuda12] jaxlib numpy
        
    - name: Run script
      run: |
        set -e
        echo "Running script: ${{ matrix.script }} with Python ${{ matrix.python-version }}"
        python scripts/${{ matrix.script }}
      timeout-minutes: 10 

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install sphinx and its dependencies for building docs
        run: |
          pip install -r docs/requirements.txt

      - name: Install doxygen
        run: sudo apt install doxygen

      - name: Build docs
        run: |
          cd docs
          sphinx-build -b html source build

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html